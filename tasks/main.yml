---
# tasks file for users
- name: Create local ssh_key_directory
  file:
    path: "{{ users_ssh_key_directory }}"
    state: directory
  delegate_to: localhost
  become: no
  when: users_manage_ssh_keys | bool

- name: Loop over groups
  include: group.yml
  with_items:
    - "{{ users_group_list }}"
  loop_control:
    label: "{{ group.name }}"
    loop_var: group
  when:
    - users_group_list is defined

- name: Loop over groups named the same as users
  include: group.yml
  with_items:
    - "{{ users_user_list }}"
  loop_control:
    label: "{{ group.name }}"
    loop_var: group
  when:
    - users_user_list is defined
    - users_add_to_primary_group_same_name | bool
    - group.state | default('present') != 'absent'

- name: Loop over users to create
  include: user.yml
  with_items:
    - "{{ users_user_list }}"
  loop_control:
    label: "{{ user.name }}"
    loop_var: user
  when:
    - users_user_list is defined

- name: Ensure ansible is using the correct login
  include_role:
    name: check-login
  when:
    - desired_user is defined

- name: Ensure users have their passwords removed if necessary
  user:
    name: "{{ user.name }}"
    state: "{{ user.state | default('present') }}"
    password_lock: "{{ user.passwordless | default(omit) }}"
  with_items:
    - "{{ users_user_list }}"
  loop_control:
    label: "{{ user.name }}"
    loop_var: user
  when:
    - users_user_list is defined
  become: yes

- name: Delete initial user
  user:
    name: "{{ initial_user }}"
    state: absent
    force: yes
    remove: no
  when:
    - users_initial_user_not_in_create_list | bool
    - users_remove_initial_user | bool
  become: yes

- name: Manage cron permission file
  template:
    src: cron.allow.j2
    dest: /etc/cron.allow
  when: users_manage_cron_allow | bool
  become: yes

- name: Ensure /etc/cron.allow doesn't exist if not managed by this
  file:
    path: /etc/cron.allow
    state: absent
  when: not users_manage_cron_allow | bool
  become: yes
